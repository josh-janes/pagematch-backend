# Local dev (Docker)
spring.datasource.url=jdbc:postgresql://localhost:5432/${DATABASE_NAME}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

## AWS RDS (update for deployment)
#spring.datasource.url=jdbc:postgresql://<rds-endpoint>:5432/${DATABASE_NAME}
#spring.datasource.username=${DATABASE_USERNAME}
#spring.datasource.password=${DATABASE_PASSWORD}

# Spring AI (Hugging Face LLM, local or API)
spring.ai.model.chat=vertexai
spring.ai.vertex.ai.gemini.api-key=${GOOGLE_AI_API_KEY}
spring.ai.vertex.ai.gemini.project-id=${GOOGLE_AI_PROJECT_ID}
spring.ai.vertex.ai.gemini.location=us-central1
spring.ai.vertex.ai.gemini.chat.options.model=gemini-2.0-flash-lite-001
spring.ai.vertex.ai.gemini.chat.options.temperature=0.1
spring.ai.vertex.ai.gemini.chat.options.max-tokens=5000

# set application name
spring.application.name=google

# configure actuators supported in the app
management.endpoints.web.exposure.include=*

# docker compose configuration
spring.docker.compose.lifecycle-management=start_only

# initialize the schema in the vector store
spring.ai.vectorstore.pgvector.initialize-schema=true

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true


# OAuth2 (Auth0 free tier)
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://<your-auth0-domain>.auth0.com/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://<your-auth0-domain>.auth0.com/.well-known/jwks.json

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Rate Limiting Configuration (1 request per day)
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].url=^/api/v1/user-context/generate
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=days